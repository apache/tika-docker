name: Build Docker images

on:
  # Allow manual runs.
  workflow_dispatch:
    inputs:
      TIKA_VERSION:
        type: string
        default: 2.8.0

env:
  PLATFORMS: linux/arm/v7,linux/arm64/v8,linux/amd64
  IMAGE_NAME: tika

jobs:
  build-image:
    name: Build Tika v${{ inputs.TIKA_VERSION }} ${{ matrix.IMAGE_TYPE }} Docker images
    strategy:
      matrix:
        IMAGE_TYPE: ["full", "minimal"]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Set Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}-${{ matrix.IMAGE_TYPE }}
            ghcr.io/${{ github.repository_owner }}//${{ env.IMAGE_NAME }}-${{ matrix.IMAGE_TYPE }}
          tags: |
            type=raw,v${{ inputs.TIKA_VERSION }}
            type=raw,latest

      - name: Build and push ${{ env.IMAGE_NAME }}-${{ matrix.IMAGE_TYPE }} image
        uses: docker/build-push-action@v4
        with:
          file: ${{ matrix.IMAGE_TYPE }}/Dockerfile
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: TIKA_VERSION=${{ inputs.TIKA_VERSION }}
